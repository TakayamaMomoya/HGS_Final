//*****************************************************
//
// 家の処理[house.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "house.h"
#include "model.h"

//*****************************************************
// 定数定義
//*****************************************************
//-------------------------
// モデルの定数
//-------------------------
namespace model
{
const string PATH_DEFAULT = "data\\MODEL\\block\\Drift_ice.x";	// デフォルトモデルのパス
}

//=====================================================
// コンストラクタ
//=====================================================
CHouse::CHouse(int nPriority) : CObjectX(nPriority)
{

}

//=====================================================
// デストラクタ
//=====================================================
CHouse::~CHouse()
{

}

//=====================================================
// 生成処理
//=====================================================
CHouse* CHouse::Create(void)
{
	CHouse *pHouse = nullptr;

	pHouse = new CHouse;

	if (pHouse != nullptr)
		pHouse->Init();

	return pHouse;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CHouse::Init(void)
{
	// 継承クラスの初期化
	CObjectX::Init();

	// モデル読込
	int nIdx = CModel::Load(&model::PATH_DEFAULT[0]);
	BindModel(nIdx);

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CHouse::Uninit(void)
{
	// 継承クラスの終了
	CObjectX::Uninit();
}

//=====================================================
// 更新処理
//=====================================================
void CHouse::Update(void)
{
	// 継承クラスの更新
	CObjectX::Update();
}

//=====================================================
// 描画処理
//=====================================================
void CHouse::Draw(void)
{
	// 継承クラスの描画
	CObjectX::Draw();
}