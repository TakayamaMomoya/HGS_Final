//*****************************************************
//
// プレゼントの処理[present.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "present.h"

//*****************************************************
// 定数定義
//*****************************************************
//-------------------------
// モデルの定数
//-------------------------
namespace model
{

}

//=====================================================
// コンストラクタ
//=====================================================
CPresent::CPresent(int nPriority) : CObject(nPriority)
{

}

//=====================================================
// デストラクタ
//=====================================================
CPresent::~CPresent()
{

}

//=====================================================
// 読込処理
//=====================================================
void CPresent::Load(void)
{

}

//=====================================================
// 破棄処理
//=====================================================
void CPresent::Unload(void)
{
	for (int i = 0; i <= (int)s_aInfoPresnt.size(); i++)
	{
		if (s_aInfoPresnt[i] != nullptr)
		{
			delete s_aInfoPresnt[i];
			s_aInfoPresnt[i] = nullptr;
		}
	}

	s_aInfoPresnt.clear();
}

//=====================================================
// 生成処理
//=====================================================
CPresent* CPresent::Create(void)
{
	CPresent *pPresent = nullptr;

	pPresent = new CPresent;

	if (pPresent != nullptr)
		pPresent->Init();

	return pPresent;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CPresent::Init(void)
{
	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CPresent::Uninit(void)
{
	// 自身の解放
	Release();
}

//=====================================================
// 更新処理
//=====================================================
void CPresent::Update(void)
{

}

//=====================================================
// 描画処理
//=====================================================
void CPresent::Draw(void)
{

}